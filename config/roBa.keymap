#include <input/processors.dtsi>      /* ★XY→スクロール変換に必要 */
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    flavor = "balanced";
    quick-tap-ms = <175>;   /* 誤爆低減のため 0→175ms に調整 */
};

&trackball {
    // automouse-layer = <4>; // 使わない
    /* ▼▼ レイヤー4が有効の間はXYを“確実に”スクロールへ変換（低速の土台） ▼▼ */

    scroll-layers = <4>;

    // ↑ これで layer=4 で必ずスクロール化される。カーソル移動にはならない。
    // （レイヤー5の倍速は下の input-listener 側で“追加”処理）
    // arrows {...} // 使わないので省略
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 10>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <10 11 12>;
        };

        ComboQ {
            bindings = <&kp Q>;
            key-positions = <0 1>;
        };

        Escape {
            bindings = <&kp ESCAPE>;
            key-positions = <0 2 1>;
        };

        Backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <9 8>;
        };

        Delete {
            bindings = <&kp DELETE>;
            key-positions = <9 8 7>;
        };

        Enter {
            bindings = <&kp ENTER>;
            key-positions = <20 21>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        /* ▼ mac用：タップで“その場をF10で半角英数に変換”→英数固定（LANG2/EISU） */

        conv_ascii_mac: conv_ascii_mac {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp F10 &kp LANG2 &to 0>;
        };

        /* ▼ mac用：タップで“その場をF6でひらがな変換”→かな固定（LANG1/KANA） */

        conv_hiragana_mac: conv_hiragana_mac {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp F6 &kp LANG1 &to 0>;
            label = "CONV_HIRAGANA_MAC";
        };

        /* 追加1: ただの Enter */

        enter_key: enter_key {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ENTER>;
        };

        /* 追加2: hold-tap（ホールド=ひらがな化、タップ=Enter） */

        enter_or_hira: enter_or_hira {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&conv_hiragana_mac &enter_key>; /* HOLD, TAP */
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            retro-tap;
        };

        /* Tap Dance: 単タップ=Enter / 単ホールド=conv_hiragana_mac */

        td_enter_hira: td_enter_hira {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp ENTER>, <&conv_hiragana_mac>;
        };

        /* Tap=トグル(&tog)、Hold=ワンショット層(&sl) */

        tog_or_sl: tog_or_sl {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&sl &tog>;        // HOLD=&sl, TAP=&tog
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            retro-tap;
        };

        /* Tap=そのレイヤへ移動(&to)、Hold=ワンショット(&sl) */

        to_or_sl: to_or_sl {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&sl &to>;         // HOLD=&sl, TAP=&to
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            retro-tap;
        };

        /* Tap = 任意キー, Hold = 指定レイヤへ移動（&to） */

        lt_to: lt_to {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;         /* 第1引数=レイヤ番号, 第2引数=タップ時キー */
            bindings = <&to &kp>;         /* HOLD=&to <layer>, TAP=&kp <key> */
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            retro-tap;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        /* ====== レイヤ定義（並び順＝レイヤ番号） ======
         * 0: default_layer
         * 1: NUM
         * 2: SYMBOL
         * 3: MOUSE
         * 4: SCROLL（低速・基準。XY→スクロール化は &trackball.scroll-layers で実施）
         * 5: ARROW（ここを“倍速”の加算トグルに使用）
         * 6: NUMPAD
         * 7: UTILITY
         */

        default_layer {
            bindings = <
&kp W         &kp E         &kp R             &kp T            &kp Y                                           &kp Y               &kp U  &kp I        &kp O         &kp P
&kp A         &kp S         &kp D             &kp F            &kp G        &kp H              &to_or_sl 3 3   &kp H               &kp J  &kp K        &kp L         &kp MINUS
&mt LSHIFT Z  &kp X         &kp C             &kp V            &kp B        &kp BACKSPACE      &kp B           &kp N               &kp M  &lt 4 COMMA  &lt 5 PERIOD  &mt RIGHT_SHIFT SLASH
&kp LGUI      &kp LEFT_ALT  &kp LEFT_CONTROL  &conv_ascii_mac  &lt 2 SPACE  &mkp MB1           &lt_to 1 ENTER  &conv_hiragana_mac                                    &to_or_sl 1 1
            >;
        };

        NUM {
            bindings = <
&kp EXCLAMATION  &kp DOUBLE_QUOTES  &kp HASH       &kp DOLLAR    &kp PERCENT                                &kp AMPERSAND  &kp SQT               &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp EQUAL
&kp NUMBER_1     &kp NUMBER_2       &kp NUMBER_3   &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6      &trans     &kp NUMBER_6   &kp NUMBER_7          &kp NUMBER_8          &kp NUMBER_9           &kp NUMBER_0
&kp LEFT_SHIFT   &kp AT_SIGN        &kp SEMICOLON  &kp COLON     &kp ASTERISK  &trans            &kp GRAVE  &kp CARET      &kp NON_US_BACKSLASH  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp RIGHT_SHIFT
&trans           &trans             &trans         &trans        &trans        &trans            &trans     &trans                                                                            &trans
            >;
        };

        SYMBOL {
            bindings = <
&kp EXCLAMATION  &kp AT_SIGN    &kp HASH       &kp DOLLAR     &kp PERCENT                                      &kp CARET      &kp AMPERSAND  &kp MINUS      &kp LCTRL    &kp NON_US_BACKSLASH
&to_or_sl 0 0    &to_or_sl 1 1  &to_or_sl 2 2  &to_or_sl 5 5  &to_or_sl 3 3  &to_or_sl 4 4      &to_or_sl 6 6  &to_or_sl 7 7  &trans         &trans         &kp AT_SIGN  &kp LEFT_BRACKET
&trans           &trans         &trans         &trans         &trans         &trans             &trans         &trans         &trans         &kp SEMICOLON  &kp COLON    &kp RIGHT_BRACKET
&trans           &trans         &trans         &trans         &trans         &trans             &trans         &trans                                                    &trans
            >;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                                      &kp F5                  &kp LEFT_ARROW  &kp RIGHT_ARROW  &kp LC(LS(TAB))  &kp LC(TAB)
&trans  &trans  &trans  &trans  &trans  &trans      &trans                  &kp T                   &mkp MB1        &mkp MB2         &kp P            &kp LEFT_BRACKET
&trans  &trans  &trans  &trans  &trans  &trans      &kp W                   &kp E                   &kp F           &trans           &trans           &kp RIGHT_BRACKET
&trans  &trans  &trans  &trans  &trans  &trans      &mt LEFT_CONTROL ENTER  &mt LEFT_COMMAND SPACE                                                    &kp SEMICOLON
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        ARROW {
            bindings = <
&trans          &trans  &trans  &kp LC(TAB)  &trans                             &kp LG(LEFT_BRACKET)  &kp F2          &kp LG(RIGHT_BRACKET)  &kp HOME  &kp PAGE_UP
&trans          &trans  &trans  &mkp MB1     &mkp MB2  &mkp MB3      &trans     &kp LC(LEFT_ARROW)    &kp UP_ARROW    &kp LC(RIGHT_ARROW)    &kp END   &kp PAGE_DOWN
&kp LEFT_SHIFT  &trans  &trans  &mkp MB4     &mkp MB5  &trans        &kp LC(A)  &kp LEFT_ARROW        &kp DOWN_ARROW  &kp RIGHT_ARROW        &trans    &trans
&trans          &trans  &trans  &trans       &trans    &trans        &trans     &trans                                                                 &trans
            >;
        };

        NUMPAD {
            bindings = <
&kp F11  &kp F12  &kp F13  &kp F14  &kp F15                      &kp N7        &kp N8        &kp N9        &kp MINUS   &kp CARET
&kp F6   &kp F7   &kp F8   &kp F9   &kp F10  &trans      &trans  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp PLUS    &kp ASTERISK
&kp F1   &kp F2   &kp F3   &kp F4   &kp F5   &trans      &kp N0  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PERIOD  &kp SLASH
&trans   &trans   &trans   &trans   &trans   &trans      &trans  &trans                                                &trans
            >;
        };

        UTILITY {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &bt BT_SEL 0          &bt BT_SEL 1       &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &kp C_BRIGHTNESS_INC  &kp C_VOLUME_UP    &trans        &trans        &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &kp C_BRIGHTNESS_DEC  &kp C_VOLUME_DOWN  &trans        &trans        &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                                               &trans
            >;
        };
    };

    /* ▼▼ 入力リスナ：XY→スクロール“倍速”をレイヤ5で追加 ▼▼
     * レイヤ4の低速スクロールは &trackball.scroll-layers=<4> で既に有効。
     * ここはレイヤ5がONの間だけ同じ変換を“追加”して、実質2倍にする。
     */

    trackball_listener: trackball_listener {
        compatible = "zmk,input-listener";
        device = <&trackball>;

        scroller_fast {
            layers = <5>;
            input-processors = <&zip_xy_to_scroll_mapper>;

            /* 必要なら倍率を個別に微調整：
             *   xy-to-scroll-scale = <2>;
             * 省略時は“追加”のぶん1倍 = 合計2倍の体感になります。
             */
        };
    };
};
