#include <input/processors.dtsi>      /* ★スクロール変換に必要 */
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    flavor = "balanced";
    quick-tap-ms = <175>;   /* 誤爆低減のため 0→175ms に調整 */
};

&trackball {
    // automouse-layer = <4>; //edited by yura 20250915
    // scroll-layers = <5>;   //edited by yura 20250915
    // arrows {
    //     layers = <3>;
    //     bindings =
    //         <&kp RIGHT_ARROW>,
    //         <&kp LEFT_ARROW>,
    //         <&kp UP_ARROW>,
    //         <&kp DOWN_ARROW>;
    //     tick = <10>;
    //     wait-ms = <5>;
    //     tap-ms = <5>;
    // };
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 10>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <22 10 11>;
        };

        ComboQ {
            bindings = <&kp Q>;
            key-positions = <0 1>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        /* ▼ mac用：タップで“その場をF10で半角英数に変換”→英数固定（LANG2/EISU） */

        conv_ascii_mac: conv_ascii_mac {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp F10 &kp LANG2>;
            label = "CONV_ASCII_MAC";
        };

        /* ▼ mac用：タップで“その場をF6でひらがな変換”→かな固定（LANG1/KANA） */

        conv_hiragana_mac: conv_hiragana_mac {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp F6 &kp LANG1>;
            label = "CONV_HIRAGANA_MAC";
        };

        // 専用: ホールド=LGUI, タップ=CapsLock（tap優先・retro-tap有効）
        mt_gui_caps: mt_gui_caps {
            compatible = "zmk,behavior-hold-tap";
            label = "MT_GUI_CAPS";
            bindings = <&kp LGUI>, <&kp CAPSLOCK>;  // ← hold, tap の順
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            retro-tap;  // 短押しは離した瞬間にタップとして発火
        };

        /* ▲ */
    };

    keymap {
        compatible = "zmk,keymap";

        /* ====== デフォルト層（アルファは不変更） ====== */

        default_layer {
            bindings = <
&kp W              &kp E         &kp R             &kp T            &kp Y                                                   &kp Y               &kp U  &kp I        &kp O    &kp P
&kp A              &kp S         &kp D             &kp F            &kp G        &kp H                       &kp BACKSPACE  &kp H               &kp J  &kp K        &kp L    &kp MINUS
&mt LSHIFT Z       &kp X         &kp C             &kp V            &kp B        &lt_to_layer_0 6 COLON      &kp B          &kp N               &kp M  &lt 4 COMMA  &kp DOT  &mt RIGHT_SHIFT SLASH
&mt_gui_caps  &kp LEFT_ALT  &kp LEFT_CONTROL  &conv_ascii_mac  &lt 2 SPACE  &mo 1                       &kp ENTER      &conv_hiragana_mac                               &lt 5 ESCAPE
            >;
        };

        FUNCTION {
            bindings = <
&kp LS(NUMBER_1)  &kp LS(NUMBER_2)  &kp LS(NUMBER_3)  &kp LS(NUMBER_4)   &kp LS(NUMBER_5)                            &kp PLUS        &kp PIPE              &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp EQUAL
&kp SEMICOLON     &kp COLON         &kp SQT           &kp DOUBLE_QUOTES  &kp GRAVE         &trans      &kp ASTERISK  &kp MINUS       &kp SLASH             &kp LEFT_BRACE        &kp RIGHT_BRACE        &trans
&kp LS(NUMBER_6)  &kp LS(NUMBER_7)  &kp LS(NUMBER_8)  &kp LS(NUMBER_9)   &kp TILDE         &trans      &trans        &kp UNDERSCORE  &kp NON_US_BACKSLASH  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &trans
&trans            &trans            &trans            &trans             &trans            &trans      &trans        &trans                                                                             &trans
            >;
        };

        NUMPAD {
            bindings = <
&kp F11  &kp F12  &kp F13  &kp F14  &kp F15                         &kp N7        &kp N8        &kp N9        &kp MINUS   &kp CARET
&kp F6   &kp F7   &kp F8   &kp F9   &kp F10  &trans      &trans     &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp PLUS    &kp ASTERISK
&kp F1   &kp F2   &kp F3   &kp F4   &kp F5   &trans      &kp N0     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PERIOD  &kp SLASH
&trans   &trans   &trans   &trans   &trans   &trans      &kp ENTER  &trans                                                &trans
            >;
        };

        ARROW {
            bindings = <
&trans  &kp LEFT_CONTROL  &trans  &kp LC(TAB)  &trans                          &kp HOME            &kp LC(A)       &kp UP_ARROW  &kp LC(E)  &kp END
&trans  &kp LEFT_SHIFT    &trans  &mkp MB1     &mkp MB2  &mkp MB3      &trans  &trans              &kp LEFT_ARROW  &kp DOWN      &kp RIGHT  &trans
&trans  &kp LEFT_WIN      &trans  &mkp MB4     &mkp MB5  &mkp MB3      &trans  &kp LC(LEFT_ARROW)  &trans          &trans        &trans     &trans
&trans  &trans            &trans  &trans       &trans    &trans        &trans  &trans                                                       &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &kp LC(A)  &mkp MB3  &kp LC(E)  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1   &mkp MB3  &mkp MB2   &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB4   &mkp MB3  &mkp MB5   &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                  &trans
            >;
        };

        /* ====== SCROLL層（速度トグル追加） ====== */

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &tog 6  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        SYMBOL {
            bindings = <
&kp EXCLAMATION  &kp DOUBLE_QUOTES  &kp HASH      &kp DOLLAR    &kp PERCENT                                   &kp AMPERSAND  &kp SQT           &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &msc SCRL_UP
&caps_word       &kp C              &kt CAPSLOCK  &lt 3 B       &mo 0        &kp LANGUAGE_4      &kp LANG2    &kp LANG1      &mmv MOVE_X(100)  &mmv MOVE_UP          &mmv MOVE_Y(100)       &msc SCRL_DOWN
&trans           &kp NUMBER_1       &kp NUMBER_2  &kp NUMBER_3  &trans       &trans              &bootloader  &trans         &mmv MOVE_LEFT    &mmv MOVE_DOWN        &mmv MOVE_RIGHT        &bt BT_CLR
&trans           &trans             &trans        &trans        &trans       &trans              &trans       &trans                                                                        &bt BT_CLR_ALL
            >;
        };

        NUM {
            bindings = <
&kp KP_N1  &kp KP_N2  &kp KP_N3  &kp KP_N4  &kp KP_N5                              &kp KP_N6        &kp KP_N7  &kp KP_N8  &kp KP_N9        &kp KP_N0
&none      &none      &none      &none      &none      &none       &kp UNDERSCORE  &kp EXCLAMATION  &kp KP_N4  &kp KP_N5  &kp KP_NUMBER_6  &kp PERCENT
&none      &none      &none      &none      &none      &none       &trans          &kp KP_N0        &kp KP_N1  &kp KP_N2  &kp KP_N3        &kp BACKSLASH
&trans     &trans     &trans     &trans     &trans     &trans      &trans          &trans                                                  &kp PIPE
            >;
        };
    };

    /* ▼▼ 入力リスナ：XY→スクロール変換（レイヤ5=低速 / レイヤ6=高速“加算”） ▼▼ */

    trackball_listener: trackball_listener {
        compatible = "zmk,input-listener";
        device = <&trackball>;

        /* 低速（デフォルト） */

        scroller_slow {
            layers = <5>;
            input-processors = <&zip_xy_to_scroll_mapper>;

            /* 必要なら↓にスケール等のプロパティを追加
               // e.g., xy-to-scroll-scale = <1>;
            */
        };

        /* 高速：レイヤ6がONの間だけ“追加で”処理される＝実質2倍スクロール */

        scroller_fast {
            layers = <6>;
            input-processors = <&zip_xy_to_scroll_mapper>;

            /* 必要なら別設定を付与
               // e.g., xy-to-scroll-scale = <2>;
            */
        };
    };

    /* ▲▲ 追加ここまで ▲▲ */
};
