#include <input/processors.dtsi>      /* ★スクロール変換に必要 */
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    flavor = "balanced";
    quick-tap-ms = <175>;   /* 誤爆低減のため 0→175ms に調整 */
};

&trackball {
    // automouse-layer = <4>; //edited by yura 20250915
    // scroll-layers = <5>;   //edited by yura 20250915
    // arrows {
    //     layers = <3>;
    //     bindings =
    //         <&kp RIGHT_ARROW>,
    //         <&kp LEFT_ARROW>,
    //         <&kp UP_ARROW>,
    //         <&kp DOWN_ARROW>;
    //     tick = <10>;
    //     wait-ms = <5>;
    //     tap-ms = <5>;
    // };
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 10>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <22 10 11>;
        };

        ComboQ {
            bindings = <&kp Q>;
            key-positions = <0 1>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        /* ▼ mac用：タップで“その場をF10で半角英数に変換”→英数固定（LANG2/EISU） */

        /* conv_ascii_mac: conv_ascii_mac {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp F10 &kp LANG2 &to 0>;
            label = "CONV_ASCII_MAC";
        }; */

        /* ▼ 先にF10→LANG2して、その後ベースへ戻る */
        /* conv_ascii_mac_then_to0: conv_ascii_mac_then_to0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <
                &kp F10      // その場を半角英数に変換
                &kp LANG2    // 英数固定（EISU）
                &to 0        // 最後にデフォルトレイヤーへ
            >;
        }; */

        /* ▼ mac用：タップで“その場をF6でひらがな変換”→かな固定（LANG1/KANA） */

        conv_hiragana_mac: conv_hiragana_mac {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp F6 &kp LANG1>;
            label = "CONV_HIRAGANA_MAC";
        };

        /* ▲ */
    };

    keymap {
        compatible = "zmk,keymap";

        /* ====== デフォルト層（アルファは不変更） ====== */

        default_layer {
            bindings = <
&kp W         &kp E         &kp R             &kp T            &kp Y                                       &kp Y      &kp U  &kp I        &kp O         &kp P
&kp A         &kp S         &kp D             &kp F            &kp G        &kp H           &tog 3         &kp H      &kp J  &kp K        &kp L         &kp MINUS
&mt LSHIFT Z  &kp X         &kp C             &kp V            &kp B        &kp ESCAPE      &kp B          &kp N      &kp M  &lt 4 COMMA  &lt 5 PERIOD  &mt RIGHT_SHIFT SLASH
&kp LGUI      &kp LEFT_ALT  &kp LEFT_CONTROL  &conv_ascii_mac  &lt 2 SPACE  &mkp MB1        &kp BACKSPACE  &kp ENTER                                    &tog 1
            >;
        };

        NUM {
            bindings = <
&kp EXCLAMATION  &kp DOUBLE_QUOTES  &kp HASH       &kp DOLLAR  &kp PERCENT                             &kp AMPERSAND  &kp SQT               &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp EQUAL
&kp KP_N1        &kp KP_N2          &kp KP_N3      &kp KP_N4   &kp KP_N5     &kp KP_N6      &trans     &kp KP_N6      &kp KP_N7             &kp KP_N8             &kp KP_N9              &kp KP_N0
&kp LEFT_SHIFT   &kp AT_SIGN        &kp SEMICOLON  &kp COLON   &kp ASTERISK  &trans         &kp GRAVE  &kp CARET      &kp NON_US_BACKSLASH  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp RIGHT_SHIFT
&trans           &trans             &trans         &trans      &trans        &trans         &trans     &trans                                                                            &trans
            >;
        };

        SYMBOL {
            bindings = <
&kp EXCLAMATION  &kp AT_SIGN  &kp HASH      &kp DOLLAR  &kp PERCENT                      &kp CARET  &kp AMPERSAND  &kp MINUS      &kp LCTRL    &kp NON_US_BACKSLASH
&trans           &kp D        &kt CAPSLOCK  &trans      &trans       &trans      &trans  &trans     &trans         &trans         &kp AT_SIGN  &kp LEFT_BRACKET
&trans           &trans       &trans        &trans      &trans       &trans      &trans  &trans     &trans         &kp SEMICOLON  &kp COLON    &kp RIGHT_BRACKET
&trans           &trans       &trans        &trans      &trans       &trans      &trans  &trans                                                &trans
            >;
        };

        ARROW {
            bindings = <
&trans  &kp LEFT_CONTROL  &trans  &kp LC(TAB)  &trans                             &kp LG(LEFT_BRACKET)  &kp F2          &kp LG(RIGHT_BRACKET)  &kp HOME   &kp PAGE_UP
&trans  &kp LEFT_SHIFT    &trans  &mkp MB1     &mkp MB2  &mkp MB3      &trans     &kp LC(LEFT_ARROW)    &kp UP_ARROW    &kp LC(RIGHT_ARROW)    &kp END    &kp PAGE_DOWN
&trans  &kp LEFT_WIN      &trans  &mkp MB4     &mkp MB5  &trans        &kp LC(A)  &kp LEFT_ARROW        &kp DOWN_ARROW  &kp RIGHT_ARROW        &kp LC(E)  &kp F5
&trans  &trans            &trans  &trans       &trans    &trans        &trans     &trans                                                                  &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &kp LC(A)  &mkp MB3  &kp LC(E)  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1   &mkp MB3  &mkp MB2   &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB4   &mkp MB3  &mkp MB5   &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                  &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &tog 2  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        NUMPAD {
            bindings = <
&kp F11  &kp F12  &kp F13  &kp F14  &kp F15                      &kp N7        &kp N8        &kp N9        &kp MINUS   &kp CARET
&kp F6   &kp F7   &kp F8   &kp F9   &kp F10  &trans      &trans  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp PLUS    &kp ASTERISK
&kp F1   &kp F2   &kp F3   &kp F4   &kp F5   &trans      &kp N0  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PERIOD  &kp SLASH
&trans   &trans   &trans   &trans   &trans   &trans      &trans  &trans                                                &trans
            >;
        };

        FUNCTION {
            bindings = <
&kp LS(NUMBER_1)  &kp LS(NUMBER_2)  &kp LS(NUMBER_3)  &kp LS(NUMBER_4)   &kp LS(NUMBER_5)                      &kp PLUS        &kp PIPE              &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp EQUAL
&kp SEMICOLON     &kp COLON         &kp SQT           &kp DOUBLE_QUOTES  &kp GRAVE         &trans      &trans  &kp MINUS       &kp SLASH             &kp LEFT_BRACE        &kp RIGHT_BRACE        &trans
&kp LS(NUMBER_6)  &kp LS(NUMBER_7)  &kp LS(NUMBER_8)  &kp LS(NUMBER_9)   &kp TILDE         &trans      &trans  &kp UNDERSCORE  &kp NON_US_BACKSLASH  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &trans
&trans            &trans            &trans            &trans             &trans            &trans      &trans  &trans                                                                             &trans
            >;
        };
    };

    /* ▼▼ 入力リスナ：XY→スクロール変換（レイヤ5=低速 / レイヤ6=高速“加算”） ▼▼ */

    trackball_listener: trackball_listener {
        compatible = "zmk,input-listener";
        device = <&trackball>;

        /* 低速（デフォルト） */

        scroller_slow {
            layers = <5>;
            input-processors = <&zip_xy_to_scroll_mapper>;

            /* 必要なら↓にスケール等のプロパティを追加
               // e.g., xy-to-scroll-scale = <1>;
            */
        };

        /* 高速：レイヤ6がONの間だけ“追加で”処理される＝実質2倍スクロール */

        scroller_fast {
            layers = <6>;
            input-processors = <&zip_xy_to_scroll_mapper>;

            /* 必要なら別設定を付与
               // e.g., xy-to-scroll-scale = <2>;
            */
        };
    };

    /* ▲▲ 追加ここまで ▲▲ */
};
